// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using project.Models;

#nullable disable

namespace project.Migrations
{
    [DbContext(typeof(ItiContext))]
    [Migration("20240316094613_is_deleted_course")]
    partial class is_deleted_course
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("project.Models.Course", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<double>("degree")
                        .HasColumnType("float");

                    b.Property<int?>("dept_id")
                        .HasColumnType("int");

                    b.Property<int>("hours")
                        .HasColumnType("int");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<double>("minDegree")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("dept_id");

                    b.ToTable("courses");

                    b.HasData(
                        new
                        {
                            id = 1,
                            degree = 100.0,
                            hours = 0,
                            is_deleted = false,
                            minDegree = 60.0,
                            name = "C#"
                        },
                        new
                        {
                            id = 2,
                            degree = 100.0,
                            hours = 0,
                            is_deleted = false,
                            minDegree = 70.0,
                            name = "OOP"
                        },
                        new
                        {
                            id = 3,
                            degree = 100.0,
                            hours = 0,
                            is_deleted = false,
                            minDegree = 50.0,
                            name = "J.S"
                        });
                });

            modelBuilder.Entity("project.Models.CrsResult", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("crs_id")
                        .HasColumnType("int");

                    b.Property<double>("degree")
                        .HasColumnType("float");

                    b.Property<int?>("trainee_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("crs_id");

                    b.HasIndex("trainee_id");

                    b.ToTable("crsResults");

                    b.HasData(
                        new
                        {
                            id = 1,
                            degree = 90.0
                        },
                        new
                        {
                            id = 2,
                            degree = 90.0
                        },
                        new
                        {
                            id = 3,
                            degree = 90.0
                        });
                });

            modelBuilder.Entity("project.Models.Department", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("manager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("departments");

                    b.HasData(
                        new
                        {
                            id = 1,
                            manager = "Eng.Ayman",
                            name = "SD"
                        },
                        new
                        {
                            id = 2,
                            manager = "Eng.Saad",
                            name = "UI/UX"
                        },
                        new
                        {
                            id = 3,
                            manager = "Eng.christen",
                            name = "open source"
                        });
                });

            modelBuilder.Entity("project.Models.Instructor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("crs_id")
                        .HasColumnType("int");

                    b.Property<int?>("dept_id")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("salary")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("crs_id");

                    b.HasIndex("dept_id");

                    b.ToTable("instructors");

                    b.HasData(
                        new
                        {
                            id = 1,
                            address = "cairo",
                            image = "ins1.png",
                            name = "Mohamed",
                            salary = 5000
                        },
                        new
                        {
                            id = 2,
                            address = "Alex",
                            image = "ins2.webp",
                            name = "Ahmed",
                            salary = 4000
                        },
                        new
                        {
                            id = 3,
                            address = "Minya",
                            image = "ins3.webp",
                            name = "Josphine",
                            salary = 40000
                        });
                });

            modelBuilder.Entity("project.Models.Trainee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("dept_id")
                        .HasColumnType("int");

                    b.Property<string>("grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("dept_id");

                    b.ToTable("trainees");

                    b.HasData(
                        new
                        {
                            id = 1,
                            address = "cairo",
                            grade = "excellent",
                            image = "stu1.jpg",
                            name = "shady"
                        },
                        new
                        {
                            id = 2,
                            address = "Alex",
                            grade = "good",
                            image = "stu2.webp",
                            name = "moustafa"
                        },
                        new
                        {
                            id = 3,
                            address = "Minya",
                            grade = "failed",
                            image = "stu3.webp",
                            name = "Mona"
                        });
                });

            modelBuilder.Entity("project.Models.Course", b =>
                {
                    b.HasOne("project.Models.Department", "department")
                        .WithMany("Courses")
                        .HasForeignKey("dept_id");

                    b.Navigation("department");
                });

            modelBuilder.Entity("project.Models.CrsResult", b =>
                {
                    b.HasOne("project.Models.Course", "course")
                        .WithMany("CrsResults")
                        .HasForeignKey("crs_id");

                    b.HasOne("project.Models.Trainee", "trainee")
                        .WithMany("CrsResults")
                        .HasForeignKey("trainee_id");

                    b.Navigation("course");

                    b.Navigation("trainee");
                });

            modelBuilder.Entity("project.Models.Instructor", b =>
                {
                    b.HasOne("project.Models.Course", "course")
                        .WithMany("Instructors")
                        .HasForeignKey("crs_id");

                    b.HasOne("project.Models.Department", "department")
                        .WithMany("Instructors")
                        .HasForeignKey("dept_id");

                    b.Navigation("course");

                    b.Navigation("department");
                });

            modelBuilder.Entity("project.Models.Trainee", b =>
                {
                    b.HasOne("project.Models.Department", "department")
                        .WithMany("Trainees")
                        .HasForeignKey("dept_id");

                    b.Navigation("department");
                });

            modelBuilder.Entity("project.Models.Course", b =>
                {
                    b.Navigation("CrsResults");

                    b.Navigation("Instructors");
                });

            modelBuilder.Entity("project.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Instructors");

                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("project.Models.Trainee", b =>
                {
                    b.Navigation("CrsResults");
                });
#pragma warning restore 612, 618
        }
    }
}
